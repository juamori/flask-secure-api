rules:
  # ==============================
  # üß© Seguran√ßa geral em Python
  # ==============================

  - id: avoid-eval
    patterns:
      - pattern: eval($X)
    message: "Uso de eval() detectado ‚Äî risco de execu√ß√£o de c√≥digo arbitr√°rio."
    severity: ERROR
    languages: [python]

  - id: avoid-exec
    patterns:
      - pattern: exec($X)
    message: "Uso de exec() detectado ‚Äî substitua por fun√ß√µes seguras."
    severity: ERROR
    languages: [python]

  - id: avoid-os-system
    patterns:
      - pattern: os.system($X)
    message: "Uso de os.system() detectado ‚Äî risco de comando arbitr√°rio (Command Injection)."
    severity: WARNING
    languages: [python]

  - id: avoid-subprocess-shell-true
    patterns:
      - pattern: subprocess.Popen($X, shell=True, ...)
    message: "Evite subprocess com shell=True ‚Äî pode permitir execu√ß√£o de c√≥digo malicioso."
    severity: ERROR
    languages: [python]

  - id: unsafe-tempfile
    patterns:
      - pattern: tempfile.mktemp()
    message: "Uso inseguro de tempfile.mktemp() ‚Äî pode causar condi√ß√£o de corrida."
    severity: WARNING
    languages: [python]

  # =====================================
  # üß† Seguran√ßa em autentica√ß√£o Flask
  # =====================================

  - id: insecure-password-storage
    patterns:
      - pattern: db.session.add(User(username=$U, password=$P))
      - pattern-not: generate_password_hash($P)
    message: "Senha possivelmente armazenada sem hash seguro (use generate_password_hash)."
    severity: ERROR
    languages: [python]

  - id: jwt-hardcoded-secret
    patterns:
      - pattern: jwt.encode($PAYLOAD, "..." , ...)
    message: "Chave secreta JWT hardcoded detectada ‚Äî use vari√°vel de ambiente."
    severity: ERROR
    languages: [python]

  - id: jwt-missing-exp
    patterns:
      - pattern: jwt.encode($PAYLOAD, $KEY)
      - pattern-not: jwt.encode({"exp": ..., ...}, ...)
    message: "Token JWT sem expira√ß√£o ‚Äî inclua campo 'exp' no payload."
    severity: WARNING
    languages: [python]

  # =====================================
  # ü™™ LGPD / Privacidade / Logging
  # =====================================

  - id: log-personal-data
    patterns:
      - pattern: logger.info($X)
    message: "Revisar logs para garantir que n√£o contenham dados pessoais ou sens√≠veis (LGPD)."
    severity: INFO
    languages: [python]

  - id: consent-log-append-only
    patterns:
      - pattern: open("consent.log", "w")
    message: "Arquivo de consentimento aberto em modo 'w' ‚Äî use 'a' (append-only)."
    severity: ERROR
    languages: [python]

  # =====================================
  # üß© Boas pr√°ticas de Flask e API
  # =====================================

  - id: debug-mode-enabled
    patterns:
      - pattern: app.run(..., debug=True, ...)
    message: "Modo debug ativo ‚Äî desative em produ√ß√£o."
    severity: WARNING
    languages: [python]

  - id: missing-https-only-cookie
    patterns:
      - pattern: response.set_cookie($NAME, $VALUE)
      - pattern-not: response.set_cookie($NAME, $VALUE, secure=True, httponly=True)
    message: "Cookie sem flag Secure/HttpOnly ‚Äî vulner√°vel a ataques XSS ou session hijacking."
    severity: WARNING
    languages: [python]

  # =====================================
  # üßæ Seguran√ßa de Configura√ß√µes
  # =====================================

  - id: secret-key-hardcoded
    patterns:
      - pattern: app.config["SECRET_KEY"] = "..."
    message: "SECRET_KEY definida diretamente no c√≥digo ‚Äî use vari√°vel de ambiente."
    severity: ERROR
    languages: [python]

  - id: missing-nonroot-user
    patterns:
      - pattern: USER root
    message: "Dockerfile executando como root ‚Äî configure USER nonroot no final do arquivo."
    severity: WARNING
    languages: [dockerfile]

